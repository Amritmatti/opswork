Listen <%= @port %>
<% if (ssl_enabled) -%>
Listen 443
<% end %>
<VirtualHost *:<%= @port %>>
        <% if (node[:apache][:ssl_enabled]) -%>
        RewriteEngine On
        RewriteCond %{HTTP:X-Forwarded-Proto} =http
        RewriteRule .* https://%{HTTP:Host}%{REQUEST_URI} [L,R=permanent]
        <% end -%>
        ServerName <%= @servername %>
        ServerAlias www.<%= @servername %>
        DocumentRoot <%= @document_root %>

        LogLevel info
        ErrorLog /var/log/apache2/<%= @name %>-error.log
        CustomLog /var/log/apache2/<%= @name %>-access.log combined


        <Directory <%= @document_root %>/>
            Options FollowSymLinks
            AllowOverride All
            Require all granted
        </Directory>

        <Directory ~ "\.svn">
		    Order allow,deny
		    Deny from all
		</Directory>

		<Directory ~ "\.git">
			Order allow,deny
			Deny from all
		</Directory>

        <% if !(node[:apache][:ReverseProxy].nil? || node[:apache][:ReverseProxy].empty?)  -%>
          <% node[:apache][:ReverseProxy].each do |a| %>
             <Location /<%= a.path %>>
                #generater R-Proxy
                ProxyPass <%= a.url %>
                ProxyPassReverse <%= a.url %>
              </Location>
          <% end %>
        <% end -%>

        #Protection Level
  <% if node[:apache][:protection] == 'htpasswd-all' -%>
    <Directory <%= @document_root %>>
        AuthType Basic
        AuthName "Restricted Content"
        AuthUserFile /etc/htpasswd
        Require valid-user
    </Directory>
    <% if !(node[:apache][:allowed_pass].nil? || node[:apache][:allowed_pass].empty?)  -%>
    <% node[:apache][:allowed_pass].each do |a| %>
     <Location <%= a %>>
       allow from all
       Satisfy Any
     </Location>
    <% end %>
    <% end %>
  <% elsif node[:apache][:protection] == 'htpasswd-login' -%>
    <Directory <%= @document_root %>/wp-login.php>
        AuthType Basic
        AuthName "Restricted Content"
        AuthUserFile /etc/apache2/htpasswd
        Require valid-user
    </Directory>
  <% elsif node[:apache][:protection] == 'ip-all' -%>
    <Directory <%= @document_root %>>
        order deny,allow
        Deny from all
        <% if !(node[:apache][:allowed_ips].nil? || node[:apache][:allowed_ips].empty?)  -%>
        <% node[:apache][:allowed_ips].each do |a| %>
            SetEnvIf X-Forwarded-For <%= a %> allow
        <% end %>
        <% end %>
        Allow from env=allow
    </Directory>
    <% if !(node[:apache][:allowed_pass].nil? || node[:apache][:allowed_pass].empty?)  -%>
    <% node[:apache][:allowed_pass].each do |a| %>
     <Location <%= a %>>
       allow from all
       Satisfy Any
     </Location>
    <% end %>
    <% end %>
  <% elsif node[:apache][:protection] == 'ip-login' -%>
  <Directory <%= @document_root %>/wp-login.php>
        order deny,allow
        Deny from all
        <% if !(node[:apache][:allowed_ips].nil? || node[:apache][:allowed_ips].empty?)  -%>
        <% node[:apache][:allowed_ips].each do |a| %>
            SetEnvIf X-Forwarded-For <%= a %> allow
        <% end %>
        <% end %>
        Allow from env=allow
    </Directory>
    <% elsif node[:apache][:protection] == 'block-login' -%>
     <Directory <%= @document_root %>/wp-login.php>
        order deny,allow
        Deny from all
    </Directory>
  <% end -%>
</VirtualHost>

<% if (node[:apache][:ssl_enabled]) -%>
<VirtualHost *:443>
  ServerName <%= @servername %>
  ServerAlias www.<%= @servername %>
  DocumentRoot <%= @document_root %>

  SSLEngine on
  SSLProxyEngine on
  SSLCertificateFile /etc/apache2/ssl/<%= @servername %>.crt
  SSLCertificateKeyFile /etc/apache2/ssl/<%= @servername %>.key
  SSLCACertificateFile /etc/apache2/ssl/<%= @servername %>.ca
  SetEnvIf User-Agent ".*MSIE.*" nokeepalive ssl-unclean-shutdown downgrade-1.0 force-response-1.0

  RequestHeader set X-Forwarded-Proto "https"

  LogLevel info
  ErrorLog /var/log/apache2/<%= @name %>-error.log
  CustomLog /var/log/apache2/<%= @name %>-access.log combined

  FileETag none
<% if !(node[:apache][:ReverseProxy].nil? || node[:apache][:ReverseProxy].empty?)  -%>
          <% node[:apache][:ReverseProxy].each do |a| %>
             <Location /<%= a.path %>>
                #generater R-Proxy
                ProxyPass <%= a.url %>
                ProxyPassReverse <%= a.url %>
              </Location>
          <% end %>
        <% end -%>
      
</VirtualHost>
<% end -%>